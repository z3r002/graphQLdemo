{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zer00/works/web/graphqlapp/src/Cat.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport React from \"react\";\nconst GET_Cats = gql`\n    query{\n        cats{\n            id\n            name\n        }\n    }\n`;\nconst ADD_CAT = gql`\n    mutation($name : String!) {\n        createCat(name: $name) {\n            id\n            name\n        }\n    }\n`;\n\nfunction cat() {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const {\n    loading: queryLoading,\n    error: queryError,\n    data\n  } = useQuery(GET_Cats); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const [updateTodo, {\n    loading: mutationLoading,\n    error: mutationError\n  }] = useMutation(ADD_CAT);\n  if (queryLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 30\n  }, this);\n  if (queryError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 28\n  }, this);\n  return data.cats.map(({\n    id,\n    type\n  }) => {\n    let input;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateTodo({\n            variables: {\n              id,\n              name: input.value\n            }\n          });\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => {\n            input = node;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), mutationLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }, this), mutationError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error :( Please try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  });\n}\n\n_s(cat, \"lyPkDYm+7s4bGii8mY1ntmAshRw=\", false, function () {\n  return [useQuery, useMutation];\n});\n\nexport default cat();","map":{"version":3,"sources":["/home/zer00/works/web/graphqlapp/src/Cat.js"],"names":["gql","useQuery","useMutation","React","GET_Cats","ADD_CAT","cat","loading","queryLoading","error","queryError","data","updateTodo","mutationLoading","mutationError","cats","map","id","type","input","e","preventDefault","variables","name","value","node"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,WAAxB,QAA4C,gBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGJ,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,MAAMK,OAAO,GAAGL,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AAQC,SAASM,GAAT,GAAe;AAAA;;AACZ;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC,YAAX;AAAyBC,IAAAA,KAAK,EAAEC,UAAhC;AAA4CC,IAAAA;AAA5C,MAAqDV,QAAQ,CAACG,QAAD,CAAnE,CAFY,CAGZ;;AACA,QAAM,CAACQ,UAAD,EAAa;AAAEL,IAAAA,OAAO,EAAEM,eAAX;AAA4BJ,IAAAA,KAAK,EAAEK;AAAnC,GAAb,IAAoEZ,WAAW,CAACG,OAAD,CAArF;AAEA,MAAIG,YAAJ,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAClB,MAAIE,UAAJ,EAAgB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEhB,SAAOC,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAc,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AACnC,QAAIC,KAAJ;AAEA,wBACI;AAAA,8BACI;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,QAAQ,EAAEE,CAAC,IAAI;AACXA,UAAAA,CAAC,CAACC,cAAF;AACAT,UAAAA,UAAU,CAAC;AAAEU,YAAAA,SAAS,EAAE;AAAEL,cAAAA,EAAF;AAAMM,cAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAlB;AAAb,WAAD,CAAV;AACAL,UAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;AACH,SALL;AAAA,gCAOI;AACI,UAAA,GAAG,EAAEC,IAAI,IAAI;AACTN,YAAAA,KAAK,GAAGM,IAAR;AACH;AAHL;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAgBKZ,eAAe,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBxB,EAiBKC,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH,GAxBM,CAAP;AAyBH;;GAlCSR,G;UAEqDL,Q,EAEeC,W;;;AA+B9E,eAAeI,GAAG,EAAlB","sourcesContent":["import { gql, useQuery, useMutation  } from '@apollo/client';\nimport React from \"react\";\n\nconst GET_Cats = gql`\n    query{\n        cats{\n            id\n            name\n        }\n    }\n`;\nconst ADD_CAT = gql`\n    mutation($name : String!) {\n        createCat(name: $name) {\n            id\n            name\n        }\n    }\n`;\n function cat() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { loading: queryLoading, error: queryError, data } = useQuery(GET_Cats,);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [updateTodo, { loading: mutationLoading, error: mutationError },] = useMutation(ADD_CAT);\n\n    if (queryLoading) return <p>Loading...</p>;\n    if (queryError) return <p>Error :(</p>;\n\n    return data.cats.map(({ id, type }) => {\n        let input;\n\n        return (\n            <div key>\n                <p>{type}</p>\n                <form\n                    onSubmit={e => {\n                        e.preventDefault();\n                        updateTodo({ variables: { id, name: input.value } });\n                        input.value = '';\n                    }}\n                >\n                    <input\n                        ref={node => {\n                            input = node;\n                        }}\n                    />\n                    <button type=\"submit\">Update Todo</button>\n                </form>\n                {mutationLoading && <p>Loading...</p>}\n                {mutationError && <p>Error :( Please try again</p>}\n            </div>\n        );\n    });\n}\nexport default cat()\n"]},"metadata":{},"sourceType":"module"}