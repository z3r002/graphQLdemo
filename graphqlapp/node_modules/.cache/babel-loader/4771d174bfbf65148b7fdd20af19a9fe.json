{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zer00/works/web/graphqlapp/src/countries.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Counties = () => /*#__PURE__*/_jsxDEV(Query, {\n  query: gql`\n         query GetContinent{\n    countries{\n    name\n    }\n}\n`,\n  children: ({\n    loading,\n    error,\n    data\n  }) => {\n    console.log('data', data);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 33\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.countries.map(({\n        id,\n        name\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: name ? name : 'incognoito'\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n_c = Counties;\nexport default Counties;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counties\");","map":{"version":3,"sources":["/home/zer00/works/web/graphqlapp/src/countries.js"],"names":["React","Query","gql","Counties","loading","error","data","console","log","countries","map","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,QAAQ,GAAG,mBACb,QAAC,KAAD;AAAO,EAAA,KAAK,EAAED,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANI;AAAA,YAOK,CAAC;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,KAA4B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,wBACI;AAAA,gBACKC,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,CAAC;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAAD,kBAChB;AAAA,kBAAcA,IAAI,GAAGA,IAAH,GAAU;AAA5B,SAASD,EAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AAnBL;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMR,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {Query} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Counties = () => (\n    <Query query={gql`\n         query GetContinent{\n    countries{\n    name\n    }\n}\n`}>\n        {({loading, error, data}) => {\n            console.log('data', data)\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error :(</p>;\n\n            return (\n                <ul>\n                    {data.countries.map(({id, name}) => (\n                        <li key={id}>{name ? name : 'incognoito'}</li>\n                    ))}\n                </ul>\n            );\n        }}\n\n    </Query>\n);\nexport default Counties\n"]},"metadata":{},"sourceType":"module"}