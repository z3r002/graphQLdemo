{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zer00/works/demographql/graphqlapp/src/CreateCat.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react';\n// import {Mutation} from \"react-apollo\";\n// import gql from \"graphql-tag\";\n//\n// const CreateCats = () => {\n//     <Mutation mutation={gql`\n//             mutation($name : String!) {\n//               createCat(name: $name) {\n//                 id\n//                 name\n//               }\n//             }\n//     `}>\n//         {({createCat}) => {\n//             return(\n//                 <div>\n//                     <form\n//                         onSubmit={e => {\n//                             e.preventDefault();\n//                             addTodo({ variables: { type: input.value } });\n//                             input.value = '';\n//                         }}\n//                     >\n//                         <input\n//                             ref={node => {\n//                                 input = node;\n//                             }}\n//                         />\n//                         <button type=\"submit\">Add Todo</button>\n//                     </form>\n//                 </div>\n//             )\n//         }\n//\n//         }\n//\n//     </Mutation>\n// }\n// export default CreateCats\nimport { gql, useMutation } from '@apollo/client';\nimport React from \"react\";\nconst ADD_CAT = gql`\n    mutation($name : String!) {\n        createCat(name: $name) {\n            id\n            name\n        }\n    }\n`;\nexport default function AddCat() {\n  _s();\n\n  let input;\n  const [addCat] = useMutation(ADD_CAT);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createCats\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addCat({\n          variables: {\n            name: input.value\n          }\n        });\n        input.value = '';\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\u0414\\u0430\\u0439\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043A\\u043E\\u0442\\u0438\\u043A\\u0443\",\n        ref: node => {\n          input = node;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addCatButton\",\n        type: \"submit\",\n        children: \"Add Cat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCat, \"TYkyLQfIdjRitxnm/AjBhWnajiI=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddCat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCat\");","map":{"version":3,"sources":["/home/zer00/works/demographql/graphqlapp/src/CreateCat.js"],"names":["gql","useMutation","React","ADD_CAT","AddCat","input","addCat","e","preventDefault","variables","name","value","node"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAGH,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAQA,eAAe,SAASI,MAAT,GAAiB;AAAA;;AAC5B,MAAIC,KAAJ;AACA,QAAM,CAACC,MAAD,IAAWL,WAAW,CAACE,OAAD,CAA5B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACC;AACG,MAAA,QAAQ,EAAEI,CAAC,IAAI;AACXA,QAAAA,CAAC,CAACC,cAAF;AACAF,QAAAA,MAAM,CAAC;AAACG,UAAAA,SAAS,EAAC;AAACC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AAAb;AAAX,SAAD,CAAN;AACAN,QAAAA,KAAK,CAACM,KAAN,GAAc,EAAd;AACH,OALJ;AAAA,8BAMI;AAAO,QAAA,WAAW,EAAC,wFAAnB;AAAsC,QAAA,GAAG,EAAEC,IAAI,IAAG;AAC9CP,UAAAA,KAAK,GAAGO,IAAR;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAnBuBR,M;UAEHH,W;;;KAFGG,M","sourcesContent":["// import React from 'react';\n// import {Mutation} from \"react-apollo\";\n// import gql from \"graphql-tag\";\n//\n// const CreateCats = () => {\n//     <Mutation mutation={gql`\n//             mutation($name : String!) {\n//               createCat(name: $name) {\n//                 id\n//                 name\n//               }\n//             }\n//     `}>\n//         {({createCat}) => {\n//             return(\n//                 <div>\n//                     <form\n//                         onSubmit={e => {\n//                             e.preventDefault();\n//                             addTodo({ variables: { type: input.value } });\n//                             input.value = '';\n//                         }}\n//                     >\n//                         <input\n//                             ref={node => {\n//                                 input = node;\n//                             }}\n//                         />\n//                         <button type=\"submit\">Add Todo</button>\n//                     </form>\n//                 </div>\n//             )\n//         }\n//\n//         }\n//\n//     </Mutation>\n// }\n// export default CreateCats\n\n\nimport { gql, useMutation } from '@apollo/client';\nimport React from \"react\";\nconst ADD_CAT = gql`\n    mutation($name : String!) {\n        createCat(name: $name) {\n            id\n            name\n        }\n    }\n`\nexport default function AddCat(){\n    let input;\n    const [addCat] = useMutation(ADD_CAT);\n    return(\n        <div className='createCats'>\n         <form\n            onSubmit={e => {\n                e.preventDefault();\n                addCat({variables:{name: input.value}});\n                input.value = '';\n            }}>\n             <input placeholder='Дайте имя котику' ref={node =>{\n                 input = node;\n             }}/>\n             <button className='addCatButton' type=\"submit\">Add Cat</button>\n         </form>\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}