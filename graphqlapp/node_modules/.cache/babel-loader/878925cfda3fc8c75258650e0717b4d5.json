{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\graphQLdemo\\\\graphqlapp\\\\src\\\\GetCats.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport React from \"react\"; // //Почему котики не могут быть названы в честь стран?\n//  const GET_Cats = gql`\n//     query {\n//         countries {\n//             name\n//         }\n//     }\n// `\n\nconst GET_Cats = gql`\n    query {\n    \n        cats{\n            id\n            name\n        }\n    \n    }\n`;\nexport default function GetCats() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_Cats);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"getCats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, data.cats.map(({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"\\u041A\\u043E\\u0442\\u0438\\u043A \", name))));\n}\n\n_s(GetCats, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetCats;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCats\");","map":{"version":3,"sources":["D:/projects/graphQLdemo/graphqlapp/src/GetCats.js"],"names":["gql","useQuery","React","GET_Cats","GetCats","loading","error","data","message","cats","map","id","name"],"mappings":";;;AAAA,SAAQA,GAAR,EAAaC,QAAb,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGH,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAYA,eAAe,SAASI,OAAT,GAAmB;AAAA;;AAC9B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACE,QAAD,CAAvC;AAEA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAc,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAD,kBACX;AAAI,IAAA,GAAG,EAAED,EAAT;AAAa,IAAA,KAAK,EAAEC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACWA,IADX,CADH,CADL,CADJ,CADJ;AAWH;;GAjBuBR,O;UACWH,Q;;;KADXG,O","sourcesContent":["import {gql, useQuery} from '@apollo/client';\r\nimport React from \"react\";\r\n\r\n// //Почему котики не могут быть названы в честь стран?\r\n//  const GET_Cats = gql`\r\n//     query {\r\n//         countries {\r\n//             name\r\n//         }\r\n//     }\r\n// `\r\nconst GET_Cats = gql`\r\n    query {\r\n    \r\n        cats{\r\n            id\r\n            name\r\n        }\r\n    \r\n    }\r\n`\r\n\r\n\r\nexport default function GetCats() {\r\n    const {loading, error, data} = useQuery(GET_Cats);\r\n\r\n    if (loading) return 'Loading...'\r\n    if (error) return `Error! ${error.message}`\r\n\r\n    return (\r\n        <div className='getCats'>\r\n            <ul>\r\n                {data.cats.map(({id, name}) => (\r\n                    <li key={id} value={name}>\r\n                        Котик {name}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}