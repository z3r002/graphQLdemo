{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\n/**\r\n * Given an AsyncIterable and a callback function, return an AsyncIterator\r\n * which produces values mapped via calling the callback function.\r\n */\n\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  // $FlowFixMe[prop-missing]\n  var iteratorMethod = iterable[SYMBOL_ASYNC_ITERATOR];\n  var iterator = iteratorMethod.call(iterable);\n  var $return;\n  var abruptClose;\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\r\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, SYMBOL_ASYNC_ITERATOR, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}","map":{"version":3,"sources":["D:/projects/graphQLdemo/graphqlapp/node_modules/graphql/subscription/mapAsyncIterator.mjs"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","SYMBOL_ASYNC_ITERATOR","mapAsyncIterator","iterable","callback","rejectCallback","iteratorMethod","iterator","call","$return","abruptClose","return","error","rethrow","Promise","reject","then","mapResult","result","done","asyncMapValue","iteratorResult","mapReject","next","_return","resolve","undefined","throw","_throw","catch"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,SAASQ,qBAAT,QAAsC,0BAAtC;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8CC,cAA9C,EAA8D;AAC3E;AACA,MAAIC,cAAc,GAAGH,QAAQ,CAACF,qBAAD,CAA7B;AACA,MAAIM,QAAQ,GAAGD,cAAc,CAACE,IAAf,CAAoBL,QAApB,CAAf;AACA,MAAIM,OAAJ;AACA,MAAIC,WAAJ;;AAEA,MAAI,OAAOH,QAAQ,CAACI,MAAhB,KAA2B,UAA/B,EAA2C;AACzCF,IAAAA,OAAO,GAAGF,QAAQ,CAACI,MAAnB;;AAEAD,IAAAA,WAAW,GAAG,SAASA,WAAT,CAAqBE,KAArB,EAA4B;AACxC,UAAIC,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,OAFD;;AAIA,aAAOH,OAAO,CAACD,IAAR,CAAaD,QAAb,EAAuBS,IAAvB,CAA4BH,OAA5B,EAAqCA,OAArC,CAAP;AACD,KAND;AAOD;;AAED,WAASI,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,WAAOA,MAAM,CAACC,IAAP,GAAcD,MAAd,GAAuBE,aAAa,CAACF,MAAM,CAACvB,KAAR,EAAeS,QAAf,CAAb,CAAsCY,IAAtC,CAA2CK,cAA3C,EAA2DX,WAA3D,CAA9B;AACD;;AAED,MAAIY,SAAJ;;AAEA,MAAIjB,cAAJ,EAAoB;AAClB;AACA,QAAIU,MAAM,GAAGV,cAAb;;AAEAiB,IAAAA,SAAS,GAAG,SAASA,SAAT,CAAmBV,KAAnB,EAA0B;AACpC,aAAOQ,aAAa,CAACR,KAAD,EAAQG,MAAR,CAAb,CAA6BC,IAA7B,CAAkCK,cAAlC,EAAkDX,WAAlD,CAAP;AACD,KAFD;AAGD;AACD;AACF;;;AAGE,SAAOlB,eAAe,CAAC;AACrB+B,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAOhB,QAAQ,CAACgB,IAAT,GAAgBP,IAAhB,CAAqBC,SAArB,EAAgCK,SAAhC,CAAP;AACD,KAHoB;AAIrBX,IAAAA,MAAM,EAAE,SAASa,OAAT,GAAmB;AACzB,aAAOf,OAAO,GAAGA,OAAO,CAACD,IAAR,CAAaD,QAAb,EAAuBS,IAAvB,CAA4BC,SAA5B,EAAuCK,SAAvC,CAAH,GAAuDR,OAAO,CAACW,OAAR,CAAgB;AACnF9B,QAAAA,KAAK,EAAE+B,SAD4E;AAEnFP,QAAAA,IAAI,EAAE;AAF6E,OAAhB,CAArE;AAID,KAToB;AAUrBQ,IAAAA,KAAK,EAAE,SAASC,MAAT,CAAgBhB,KAAhB,EAAuB;AAC5B,UAAI,OAAOL,QAAQ,CAACoB,KAAhB,KAA0B,UAA9B,EAA0C;AACxC,eAAOpB,QAAQ,CAACoB,KAAT,CAAef,KAAf,EAAsBI,IAAtB,CAA2BC,SAA3B,EAAsCK,SAAtC,CAAP;AACD;;AAED,aAAOR,OAAO,CAACC,MAAR,CAAeH,KAAf,EAAsBiB,KAAtB,CAA4BnB,WAA5B,CAAP;AACD;AAhBoB,GAAD,EAiBnBT,qBAjBmB,EAiBI,YAAY;AACpC,WAAO,IAAP;AACD,GAnBqB,CAAtB;AAoBD;;AAED,SAASmB,aAAT,CAAuBzB,KAAvB,EAA8BS,QAA9B,EAAwC;AACtC,SAAO,IAAIU,OAAJ,CAAY,UAAUW,OAAV,EAAmB;AACpC,WAAOA,OAAO,CAACrB,QAAQ,CAACT,KAAD,CAAT,CAAd;AACD,GAFM,CAAP;AAGD;;AAED,SAAS0B,cAAT,CAAwB1B,KAAxB,EAA+B;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELwB,IAAAA,IAAI,EAAE;AAFD,GAAP;AAID","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\nimport { SYMBOL_ASYNC_ITERATOR } from \"../polyfills/symbols.mjs\";\r\n\r\n/**\r\n * Given an AsyncIterable and a callback function, return an AsyncIterator\r\n * which produces values mapped via calling the callback function.\r\n */\r\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\r\n  // $FlowFixMe[prop-missing]\r\n  var iteratorMethod = iterable[SYMBOL_ASYNC_ITERATOR];\r\n  var iterator = iteratorMethod.call(iterable);\r\n  var $return;\r\n  var abruptClose;\r\n\r\n  if (typeof iterator.return === 'function') {\r\n    $return = iterator.return;\r\n\r\n    abruptClose = function abruptClose(error) {\r\n      var rethrow = function rethrow() {\r\n        return Promise.reject(error);\r\n      };\r\n\r\n      return $return.call(iterator).then(rethrow, rethrow);\r\n    };\r\n  }\r\n\r\n  function mapResult(result) {\r\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\r\n  }\r\n\r\n  var mapReject;\r\n\r\n  if (rejectCallback) {\r\n    // Capture rejectCallback to ensure it cannot be null.\r\n    var reject = rejectCallback;\r\n\r\n    mapReject = function mapReject(error) {\r\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\r\n    };\r\n  }\r\n  /* TODO: Flow doesn't support symbols as keys:\r\n     https://github.com/facebook/flow/issues/3258 */\r\n\r\n\r\n  return _defineProperty({\r\n    next: function next() {\r\n      return iterator.next().then(mapResult, mapReject);\r\n    },\r\n    return: function _return() {\r\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\r\n        value: undefined,\r\n        done: true\r\n      });\r\n    },\r\n    throw: function _throw(error) {\r\n      if (typeof iterator.throw === 'function') {\r\n        return iterator.throw(error).then(mapResult, mapReject);\r\n      }\r\n\r\n      return Promise.reject(error).catch(abruptClose);\r\n    }\r\n  }, SYMBOL_ASYNC_ITERATOR, function () {\r\n    return this;\r\n  });\r\n}\r\n\r\nfunction asyncMapValue(value, callback) {\r\n  return new Promise(function (resolve) {\r\n    return resolve(callback(value));\r\n  });\r\n}\r\n\r\nfunction iteratorResult(value) {\r\n  return {\r\n    value: value,\r\n    done: false\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}