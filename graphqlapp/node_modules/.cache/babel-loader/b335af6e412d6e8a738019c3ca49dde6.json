{"ast":null,"code":"import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function (_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(context.client, 28) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","map":{"version":3,"sources":["../../../src/react/context/ApolloProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,SAAT,QAA0B,cAA1B;AAGA,SAAS,gBAAT,QAAiC,oBAAjC;AAOA,OAAO,IAAM,cAAc,GAAuC,UAAC,EAAD,EAGjE;MAFC,MAAM,GAAA,EAAA,CAAA,M;MACN,QAAQ,GAAA,EAAA,CAAA,Q;AAER,MAAM,aAAa,GAAG,gBAAgB,EAAtC;AACA,SAAO,KACL,CAAA,aADK,CACL,aAAC,CAAa,QADT,EACkB,IADlB,EACkB,UACpB,OADoB,EACF;AAAjB,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAAiB;;AACjB,QAAI,MAAM,IAAI,OAAO,CAAC,MAAR,KAAmB,MAAjC,EAAyC;AACvC,MAAA,OAAO,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,OAAlB,EAA2B;AAAE,QAAA,MAAM,EAAA;AAAR,OAA3B,CAAV;AACD;;AAED,IAAA,OAAA,CAAA,GAAA,CACE,QADF,KACgB,YADhB,GAEE,SAAA,CAAA,OAAA,CAAA,MAAA,EAAA,EAAA,CAFF,GAEE,SAAA,CAAwD,OAAA,CAAA,MAAxD,EAAwD,2DACtD,qDADF,CAFF;AAMA,WACE,KAAA,CAAA,aAAA,CAAC,aAAa,CAAC,QAAf,EAAuB;AAAC,MAAA,KAAK,EAAE;AAAR,KAAvB,EACG,QADH,CADF;AAKD,GAlBE,CAAP;AAqBD,CA1BM","sourceRoot":"","sourcesContent":["import React from 'react';\r\nimport { invariant } from 'ts-invariant';\r\nimport { getApolloContext } from \"./ApolloContext.js\";\r\nexport var ApolloProvider = function (_a) {\r\n    var client = _a.client, children = _a.children;\r\n    var ApolloContext = getApolloContext();\r\n    return React.createElement(ApolloContext.Consumer, null, function (context) {\r\n        if (context === void 0) { context = {}; }\r\n        if (client && context.client !== client) {\r\n            context = Object.assign({}, context, { client: client });\r\n        }\r\n        process.env.NODE_ENV === \"production\" ? invariant(context.client, 28) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' +\r\n            'sure you pass in your client via the \"client\" prop.');\r\n        return (React.createElement(ApolloContext.Provider, { value: context }, children));\r\n    });\r\n};\r\n//# sourceMappingURL=ApolloProvider.js.map"]},"metadata":{},"sourceType":"module"}