{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/zer00/works/web/graphqlapp/src/countries.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Counties = () => /*#__PURE__*/_jsxDEV(Query, {\n  query: gql`\n         query GetContinent{\n    countries{\n    name\n    }\n}\n`,\n  children: ({\n    loading,\n    error,\n    data\n  }) => {\n    console.log('data', data);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.allUsers.map(({\n        id,\n        name\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: name ? name : 'incognoito'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, 'allUsers', false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\n\n_c = Counties;\nexport default Counties;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counties\");","map":{"version":3,"sources":["/home/zer00/works/web/graphqlapp/src/countries.js"],"names":["React","Query","gql","Counties","loading","error","data","console","log","allUsers","map","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,QAAQ,GAAG,mBACjB,QAAC,KAAD;AAAO,EAAA,KAAK,EAAED,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA,CANA;AAAA,YAQK,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,wBACI;AAAA,gBACKC,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD,kBACf;AAAA,+BAAa;AAAA,oBAAIA,IAAI,GAAGA,IAAH,GAAU;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAb,SAASD,EAAT;AAAA;AAAA;AAAA;AAAA,cADH;AADL,OAAQ,UAAR;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;AApBL;AAAA;AAAA;AAAA;AAAA,QADA;;KAAMR,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport {Query} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Counties = () => (\n<Query query={gql`\n         query GetContinent{\n    countries{\n    name\n    }\n}\n`}\n>\n    {({ loading, error, data }) => {\n        console.log('data', data)\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error :(</p>;\n\n        return (\n            <ul key='allUsers'>\n                {data.allUsers.map(({ id, name }) => (\n                    <li key={id}><a>{name ? name : 'incognoito'}</a></li>\n                ))}\n            </ul>\n        );\n    }}\n\n</Query>\n);\nexport default Counties\n"]},"metadata":{},"sourceType":"module"}